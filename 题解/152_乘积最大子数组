#152_乘积最大子数组
> 个人leetcode笔记_Java

#题目描述
给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。

示例 1:

输入: [2,3,-2,4]
输出: 6
解释: 子数组 [2,3] 有最大乘积 6。
示例 2:

输入: [-2,0,-1]
输出: 0
解释: 结果不能为 2, 因为 [-2,-1] 不是子数组。

#题目解析

#Code
- O(n^2)解法：
```Java
class Solution {
    // Dynamic Programming
    // [1,……,n-1] -> get a solution: [s1,……,sk]
    // [1,……,n] -> soulution is max(hash[n-2]*nums[n-1] ,last solution)
    public int maxProduct(int[] nums) {
        int length = nums.length;
        int[] hash_table = new int[length];
        Arrays.fill(hash_table,0);
        hash_table[0] = nums[0];
        int res = hash_table[0];
        for(int i = 1; i < length; i++){
            int max = nums[i];
            int mul = nums[i];
            for(int j = i-1; j >=0; j--){
                mul *= nums[j];
                max = Math.max(max,mul);
            }
            int candidate = max;
            res = res > candidate ? res : candidate;
            hash_table[i] = max;
        }
        // res = res > hash_table[length-1] ? res : hash_table[length-1];
        return res;
    }
}
```
